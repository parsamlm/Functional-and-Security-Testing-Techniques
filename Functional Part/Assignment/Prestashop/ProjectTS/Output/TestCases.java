package TestCases;

import org.junit.BeforeClass;
// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
import TestCases.PO.*;

public class TestCases {

    @BeforeClass()
    public static void setup() {
        System.setProperty("webdriver.gecko.driver", "InsertGeckoPathHere");
    }

    private WebDriver driver;

    private Map<String, Object> vars;

    private JavascriptExecutor js;

    @Before
    public void setUp() {
        driver = new FirefoxDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }

    @After
    public void tearDown() {
        driver.quit();
    }

    @Test
    public void addNewProduct() {
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin@prestashop.com", "password");
        DashboardPO _DashboardPO = new DashboardPO(driver, js, vars);
        _DashboardPO.doAddNewProduct("Blue Jacket3");
        assert (_DashboardPO.set_CSSSELECTOR_alert_successnth_child1().size() > 0);
        _DashboardPO.doLogout();
    }

    @Test
    public void addEmptyProduct() {
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin@prestashop.com", "password");
        DashboardPO _DashboardPO = new DashboardPO(driver, js, vars);
        _DashboardPO.doAddEmptyProduct();
        assertThat(_DashboardPO.set_CSSSELECTOR_ollinth_child1_1(), is("This link_rewrite field is required at least in English (English)"));
        assertThat(_DashboardPO.set_CSSSELECTOR_ollinth_child2(), is("This name field is required at least in English (English)"));
        _DashboardPO.doLogout();
    }

    @Test
    public void editProduct() {
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin@prestashop.com", "password");
        DashboardPO _DashboardPO = new DashboardPO(driver, js, vars);
        _DashboardPO.doEditProduct("Deep Blue Jacket");
        assert (_DashboardPO.set_CSSSELECTOR_alert_successnth_child1().size() > 0);
        _DashboardPO.doLogout();
    }

    @Test
    public void addNewState() {
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin@prestashop.com", "password");
        DashboardPO _DashboardPO = new DashboardPO(driver, js, vars);
        _DashboardPO.doAddNewState("Liguria", "1121", "Italy", "Europe");
        assert (_DashboardPO.set_CSSSELECTOR_alert_successnth_child1().size() > 0);
        _DashboardPO.doLogout();
    }

    @Test
    public void addEmptyState() {
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin@prestashop.com", "password");
        DashboardPO _DashboardPO = new DashboardPO(driver, js, vars);
        _DashboardPO.doAddEmptyState();
        assertThat(_DashboardPO.set_CSSSELECTOR_ollinth_child1_1(), is("The iso_code field is required."));
        _DashboardPO.click_CSSSELECTOR_ollinth_child2();
    }

    @Test
    public void addNewFeature() {
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin@prestashop.com", "password");
        DashboardPO _DashboardPO = new DashboardPO(driver, js, vars);
        _DashboardPO.doAddNewFeature("Strong");
        assert (_DashboardPO.set_CSSSELECTOR_alert_successnth_child1().size() > 0);
        _DashboardPO.doLogout();
    }

    @Test
    public void addEmptyFeature() {
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin@prestashop.com", "password");
        DashboardPO _DashboardPO = new DashboardPO(driver, js, vars);
        _DashboardPO.doAddEmptyFeature();
        assert (_DashboardPO.set_CSSSELECTOR_alert_danger().size() > 0);
        _DashboardPO.doLogout();
    }

    @Test
    public void addNewAttribute() {
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin@prestashop.com", "password");
        DashboardPO _DashboardPO = new DashboardPO(driver, js, vars);
        _DashboardPO.doAddNewAttribute("Quantity", "Qnt");
        assert (_DashboardPO.set_CSSSELECTOR_alert_successnth_child1().size() > 0);
        _DashboardPO.doLogout();
    }
}
