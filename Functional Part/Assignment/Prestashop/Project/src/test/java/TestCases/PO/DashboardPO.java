package TestCases.PO;

// Generated by Selenium IDE

import org.junit.Test;
import org.junit.Before;
import org.junit.After;

import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class DashboardPO {

    WebDriver driver;

    JavascriptExecutor js;

    Map<String, Object> vars;

    public DashboardPO(WebDriver driver, JavascriptExecutor js, Map<String, Object> vars) {
        this.driver = driver;
        this.js = js;
        this.vars = vars;
    }

    public void click_LINKTEXT_Products() {
        By elem = By.linkText("Products");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void click_ID_page_header_desc_product_new_product() {
        By elem = By.id("page-header-desc-product-new_product");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void set_ID_name_1(String key1) {
        By elem = By.id("name_1");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).clear();
        driver.findElement(elem).sendKeys(key1);
    }

    public void click_NAME_submitAddproduct() {
        By elem = By.name("submitAddproduct");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void doAddNewProduct(String key1) {
        {
            By elem = By.linkText("Catalog");
            MyUtils.WaitForElementLoaded(driver, elem);
            WebElement element = driver.findElement(elem);
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        click_LINKTEXT_Products();
        click_ID_page_header_desc_product_new_product();
        set_ID_name_1(key1);
        try {
            Thread.sleep(2000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        click_NAME_submitAddproduct();
    }

    public List<WebElement> set_CSSSELECTOR_alert_successnth_child1() {
        By elem = By.cssSelector(".alert-success:nth-child(1)");
        MyUtils.WaitForElementLoaded(driver, elem);
        List<WebElement> elements = driver.findElements(elem);
        return elements;
    }

    public void click_CSSSELECTOR_employee_name() {
        By elem = By.cssSelector(".employee_name");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void click_ID_header_logout() {
        By elem = By.id("header_logout");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void doLogout() {
        click_CSSSELECTOR_employee_name();
        click_ID_header_logout();
    }

    public void set_CSSSELECTOR_ollinth_child1() {
        By elem = By.cssSelector("ol > li:nth-child(1)");
        MyUtils.WaitForElementLoaded(driver, elem);
    }

    public void doAddEmptyProduct() {
        {
            By elem = By.linkText("Catalog");
            MyUtils.WaitForElementLoaded(driver, elem);
            WebElement element = driver.findElement(elem);
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        click_LINKTEXT_Products();
        click_ID_page_header_desc_product_new_product();
        try {
            Thread.sleep(2000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        click_NAME_submitAddproduct();
        set_CSSSELECTOR_ollinth_child1();
    }

    public String set_CSSSELECTOR_ollinth_child1_1() {
        By elem = By.cssSelector("ol > li:nth-child(1)");
        MyUtils.WaitForElementLoaded(driver, elem);
        return driver.findElement(elem).getText();
    }

    public String set_CSSSELECTOR_ollinth_child2() {
        By elem = By.cssSelector("ol > li:nth-child(2)");
        MyUtils.WaitForElementLoaded(driver, elem);
        return driver.findElement(elem).getText();
    }

    public void click_CSSSELECTOR_tr__8_0edit() {
        By elem = By.cssSelector("#tr__8_0 .edit");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void doEditProduct(String key1) {
        {
            By elem = By.linkText("Catalog");
            MyUtils.WaitForElementLoaded(driver, elem);
            WebElement element = driver.findElement(elem);
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        click_LINKTEXT_Products();
        click_CSSSELECTOR_tr__8_0edit();
        set_ID_name_1(key1);
        try {
            Thread.sleep(2000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        click_NAME_submitAddproduct();
    }

    public void click_LINKTEXT_States() {
        By elem = By.linkText("States");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void click_ID_page_header_desc_state_new_state() {
        By elem = By.id("page-header-desc-state-new_state");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void set_ID_name(String key1) {
        By elem = By.id("name");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).clear();
        driver.findElement(elem).sendKeys(key1);
    }

    public void set_ID_iso_code(String key2, String key3, String key4) {
        By elem = By.id("iso_code");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).clear();
        driver.findElement(elem).sendKeys(key2);
        {
            elem = By.id("id_country");
            MyUtils.WaitForElementLoaded(driver, elem);
            WebElement dropdown = driver.findElement(elem);
            elem = By.xpath("//option[. = '" + key3 + "']");
            MyUtils.WaitForElementLoaded(driver, elem);
            dropdown.findElement(elem).click();
        }
        {
            elem = By.id("id_zone");
            MyUtils.WaitForElementLoaded(driver, elem);
            WebElement dropdown = driver.findElement(elem);
            elem = By.xpath("//option[. = '" + key4 + "']");
            MyUtils.WaitForElementLoaded(driver, elem);
            dropdown.findElement(elem).click();
        }
    }

    public void click_ID_state_form_submit_btn() {
        By elem = By.id("state_form_submit_btn");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void doAddNewState(String key1, String key2, String key3, String key4) {
        {
            By elem = By.linkText("Localization");
            MyUtils.WaitForElementLoaded(driver, elem);
            WebElement element = driver.findElement(elem);
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        click_LINKTEXT_States();
        click_ID_page_header_desc_state_new_state();
        set_ID_name(key1);
        set_ID_iso_code(key2, key3, key4);
        click_ID_state_form_submit_btn();
    }

    public void doAddEmptyState() {
        {
            By elem = By.linkText("Localization");
            MyUtils.WaitForElementLoaded(driver, elem);
            WebElement element = driver.findElement(elem);
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        click_LINKTEXT_States();
        click_ID_page_header_desc_state_new_state();
        click_ID_state_form_submit_btn();
        set_CSSSELECTOR_ollinth_child1();
    }

    public void click_CSSSELECTOR_ollinth_child2() {
        By elem = By.cssSelector("ol > li:nth-child(2)");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
        click_CSSSELECTOR_employee_name();
        click_ID_header_logout();
    }

    public void click_LINKTEXT_ProductFeatures() {
        By elem = By.linkText("Product Features");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void click_ID_page_header_desc_feature_new_feature() {
        By elem = By.id("page-header-desc-feature-new_feature");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void click_ID_feature_form_submit_btn() {
        By elem = By.id("feature_form_submit_btn");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void doAddNewFeature(String key1) {
        {
            By elem = By.linkText("Catalog");
            MyUtils.WaitForElementLoaded(driver, elem);
            WebElement element = driver.findElement(elem);
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        click_LINKTEXT_ProductFeatures();
        click_ID_page_header_desc_feature_new_feature();
        set_ID_name_1(key1);
        click_ID_feature_form_submit_btn();
    }

    public void doAddEmptyFeature() {
        {
            By elem = By.linkText("Catalog");
            MyUtils.WaitForElementLoaded(driver, elem);
            WebElement element = driver.findElement(elem);
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        click_LINKTEXT_ProductFeatures();
        click_ID_page_header_desc_feature_new_feature();
        click_ID_feature_form_submit_btn();
    }

    public List<WebElement> set_CSSSELECTOR_alert_danger() {
        By elem = By.cssSelector(".alert-danger");
        MyUtils.WaitForElementLoaded(driver, elem);
        List<WebElement> elements = driver.findElements(elem);
        return elements;
    }

    public void click_LINKTEXT_ProductAttributes() {
        By elem = By.linkText("Product Attributes");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void click_ID_page_header_desc_attribute_group_new_attribute_group() {
        By elem = By.id("page-header-desc-attribute_group-new_attribute_group");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void set_ID_public_name_1(String key2) {
        By elem = By.id("public_name_1");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).clear();
        driver.findElement(elem).sendKeys(key2);
    }

    public void click_ID_attribute_group_form_submit_btn() {
        By elem = By.id("attribute_group_form_submit_btn");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void doAddNewAttribute(String key1, String key2) {
        {
            By elem = By.linkText("Catalog");
            MyUtils.WaitForElementLoaded(driver, elem);
            WebElement element = driver.findElement(elem);
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        click_LINKTEXT_ProductAttributes();
        click_ID_page_header_desc_attribute_group_new_attribute_group();
        set_ID_name_1(key1);
        set_ID_public_name_1(key2);
        click_ID_attribute_group_form_submit_btn();
    }
}
