package TestCases.PO;

// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class HomePO {

    WebDriver driver;

    JavascriptExecutor js;

    Map<String, Object> vars;

    public HomePO(WebDriver driver, JavascriptExecutor js, Map<String, Object> vars) {
        this.driver = driver;
        this.js = js;
        this.vars = vars;
    }

    public void goToNewContent() {
        By elem = By.linkText("New content");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void logout() {
        {
            WebDriverWait wait = new WebDriverWait(driver, 30);
            By elem = By.linkText("Log out");
            MyUtils.WaitForElementLoaded(driver, elem);
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText("Log out")));
        }
        By elem = By.linkText("Log out");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void goToContent() {
        By elem = By.linkText("Content");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void click_CSSSELECTOR_bl_navbar_right() {
        By elem = By.cssSelector(".bl-navbar-right");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, 30);
            elem = By.linkText("Log out");
            MyUtils.WaitForElementLoaded(driver, elem);
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText("Log out")));
        }
    }

    public void click_LINKTEXT_Logout() {
        By elem = By.linkText("Log out");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void logout_1() {
        click_CSSSELECTOR_bl_navbar_right();
        click_LINKTEXT_Logout();
    }

    public void goToUsers() {
        By elem = By.linkText("Users");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public List<WebElement> getAlert() {
        By elem = By.id("alert");
        MyUtils.WaitForElementLoaded(driver, elem);
        List<WebElement> elements = driver.findElements(elem);
        return elements;
    }
}
