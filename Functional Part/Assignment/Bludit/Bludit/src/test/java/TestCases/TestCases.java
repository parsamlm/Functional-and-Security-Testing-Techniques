package TestCases;

import org.junit.BeforeClass;
// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;

import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

import TestCases.PO.*;

public class TestCases {

    @BeforeClass()
    public static void setup() {
    }

    private WebDriver driver;

    private Map<String, Object> vars;

    private JavascriptExecutor js;

    @Before
    public void setUp() {
        driver = new FirefoxDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }

    @After
    public void tearDown() {
        driver.quit();
    }

    @Test
    public void addContent() {
        driver.get("http://localhost:8080/admin");
        driver.manage().window().setSize(new Dimension(629, 822));
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin", "password");
        DashboardPO _DashboardPO = new DashboardPO(driver, js, vars);
        _DashboardPO.doNewContent("Test Content");
        assertThat(_DashboardPO.set_LINKTEXT_TestContent_1(), is("Test Content"));
        _DashboardPO.doLogout();
    }

    @Test
    public void changeUrl() {
        driver.get("http://localhost:8080/admin");
        driver.manage().window().setSize(new Dimension(1174, 824));
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin", "password");
        DashboardPO _DashboardPO = new DashboardPO(driver, js, vars);
        _DashboardPO.doChangeUrl("new-post-url");
        assert (_DashboardPO.set_LINKTEXT_new_post_url().size() > 0);
        _DashboardPO.doLogout();
    }

    @Test
    public void changeParent() {
        driver.get("http://localhost:8080/admin");
        driver.manage().window().setSize(new Dimension(1174, 822));
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin", "password");
        DashboardPO _DashboardPO = new DashboardPO(driver, js, vars);
        _DashboardPO.doChangeParent("Create your own content");
        assertThat(_DashboardPO.set_XPATH_locator(), is("Create your own content"));
        _DashboardPO.doLogout();
    }

    @Test
    public void addAsDraft() {
        driver.get("http://localhost:8080/admin");
        driver.manage().window().setSize(new Dimension(1174, 822));
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin", "password");
        DashboardPO _DashboardPO = new DashboardPO(driver, js, vars);
        _DashboardPO.doAddNewDraft("Draft Content");
        assert (_DashboardPO.set_LINKTEXT_DraftContent().size() > 0);
        _DashboardPO.doLogout();
    }

    @Test
    public void changePosition() {
        driver.get("http://localhost:8080/admin");
        driver.manage().window().setSize(new Dimension(1174, 822));
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin", "password");
        DashboardPO _DashboardPO = new DashboardPO(driver, js, vars);
        _DashboardPO.doChangePositionOfContent("30");
        assertThat(_DashboardPO.set_ID_jsposition_1(), is("30"));
        _DashboardPO.doLogout();
    }

    @Test
    public void deletePost() {
        driver.get("http://localhost:8080/admin");
        driver.manage().window().setSize(new Dimension(1174, 822));
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin", "password");
        DashboardPO _DashboardPO = new DashboardPO(driver, js, vars);
        _DashboardPO.doDeleteContent();
        assertFalse(_DashboardPO.isFollowBluditLinkAvailable());
        _DashboardPO.doLogout();
    }

    @Test
    public void setStickyPost() {
        driver.get("http://localhost:8080/admin");
        driver.manage().window().setSize(new Dimension(1174, 822));
        driver.findElement(By.cssSelector(".uk-vertical-align")).click();
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin", "password");
        DashboardPO _DashboardPO = new DashboardPO(driver, js, vars);
        _DashboardPO.doSetAContentAsSticky("Sticky");
        assert (_DashboardPO.set_LINKTEXT_Setupyournewsite().size() > 0);
        _DashboardPO.doLogout();
    }
}
