import com.google.gson.Gson

fun main() {

    val serviceDetailsList = getServiceDetailsFromNetwork("wordpress-docker_my-network")
    writeToFile("data.json", Gson().toJson(serviceDetailsList))
    // TODO: readFromFile() Function should be implemented here
    val vulnerabilities = fetchAllVulnerabilities("microsoft", "windows_10", "1607")
}

fun getServiceDetailsFromNetwork(networkName: String): MutableList<ServiceDetails> {
    val serviceDetailsList: MutableList<ServiceDetails> = mutableListOf()
    findDockerContainersInNetwork(networkName).forEach { containerName: String ->
        val containers = parseContainersFromJson(getContainerDetails(containerName))
        containers.forEach { container: Container ->
            val serviceVendor: String
            val serviceVersion: String
            val serviceType: String?
            container.config.image.split(":").let { image ->
                serviceVendor = image[0]
                serviceVersion = image[1]
                serviceType = serviceVendorToServiceType[serviceVendor]
            }
            val ports = container.networkSettings.ports.keys
            val ipAddress = container.networkSettings.networks[networkName]?.ipAddress

            val serviceDetails = ServiceDetails(
                ipAddress = ipAddress!!,
                ports = ports,
                serviceVendor = serviceVendor,
                serviceType = serviceType,
                serviceVersion = serviceVersion
            )
            serviceDetailsList.add(serviceDetails)
        }
    }
    return serviceDetailsList
}

fun getContainerDetails(containerName: String): String {
    val command = "docker inspect $containerName"
    val process = Runtime.getRuntime().exec(arrayOf("/bin/bash", "-c", command))
    val output = process.inputStream.bufferedReader().readText()
    return output
}

fun findDockerContainersInNetwork(networkName: String): List<String> {
    val command = "docker network inspect --format '{{range .Containers}}{{.Name}} {{end}}' $networkName"
    val process = Runtime.getRuntime().exec(arrayOf("/bin/bash", "-c", command))
    val output = process.inputStream.bufferedReader().readText().trim()
    return output.split(" ")
}

fun parseContainersFromJson(jsonString: String): Array<Container> {
    return jsonToObject(jsonString)
}