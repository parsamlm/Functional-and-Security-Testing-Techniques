fun getServiceDetailsFromNetwork(networkName: String): List<ServiceDetails> {
    return findDockerContainersInNetwork(networkName).flatMap { containerName ->
        parseContainersFromJson(getContainerDetails(containerName)).map { container ->
            val (serviceVendor, serviceVersion) = container.config.image.split(":")
            ServiceDetails(
                ipAddress = container.networkSettings.networks[networkName]?.ipAddress!!,
                ports = container.networkSettings.ports.keys,
                serviceVendor = serviceVendor,
                serviceType = serviceVendorToServiceType[serviceVendor],
                serviceVersion = serviceVersion
            )
        }
    }
}

fun getContainerDetails(containerName: String): String {
    return runBashCommand(arrayOf("/bin/bash", "-c", "docker inspect $containerName"))
}

fun findDockerContainersInNetwork(networkName: String): List<String> {
    return runBashCommand(
        arrayOf(
            "/bin/bash",
            "-c",
            "docker network inspect --format '{{range .Containers}}{{.Name}} {{end}}' $networkName"
        )
    ).split(" ")
}

fun parseContainersFromJson(jsonString: String): Array<Container> {
    return jsonToKotlinObject(jsonString)
}